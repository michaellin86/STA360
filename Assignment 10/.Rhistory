prior.par = c(m,c,a,b);
prior = dnormgam(prior.par)
m = 0; c = 1; a = 1; b = 150;
prior.par = c(m,c,a,b);
prior = dnormgam(prior.par)
m = 0; c = 1; a = 2; b = 150;
prior.par = c(m,c,a,b);
prior = dnormgam(prior.par)
source('~/.active-rstudio-document')
m = 0; c = 1; a = 3; b = 150;
prior.par = c(m,c,a,b);
prior = dnormgam(prior.par)
m = 0; c = 1; a = 3; b = 5;
prior.par = c(m,c,a,b);
prior = dnormgam(prior.par)
m = 0; c = 1; a = 3; b = 1;
prior.par = c(m,c,a,b);
prior = dnormgam(prior.par)
source('~/.active-rstudio-document')
m = 0; c = 1; a = 3; b = 2;
prior.par = c(m,c,a,b);
prior = dnormgam(prior.par)
m = 0; c = 1; a = 3; b = 2;
prior.par = c(m,c,a,b);
prior = dnormgam(prior.par)
m = 0; c = 1; a = 3; b = 5;
prior.par = c(m,c,a,b);
prior = dnormgam(prior.par)
m = 0; c = 1; a = 3; b = 50;
prior.par = c(m,c,a,b);
prior = dnormgam(prior.par)
X = rnorm(500, m, c) + rgamma(500, a, b)
m = 0; c = 1; a = 3; b = 50;
prior.par = c(m,c,a,b);
prior = dnormgam(prior.par)
X
m = 0; c = 1; a = 3; b = 50;
prior.par = c(m,c,a,b);
prior = dnormgam(prior.par)
histogram(X)
X = rnorm(500, m, c) * rgamma(500, a, b)
X
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
ao.mean.samp
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
hist(ao)
histogram(ao)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Assignment 4/snowfall.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
prob
mean(prob)
hist(prob)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Assignment 4/snowfall.R')
prob
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
prob
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Assignment 5/assign5-3new.R')
## Distribution parameters ##
b = 0.05
n = 50
y = 20
lam = 25
## Gibbs Sampling ##
N = 10000
b.samp = rep(NA,N)
b.samp[1] = b
n.samp = rep(NA,N)
n.samp[1] = n
for(i in 2:N){
b.samp[i] = rbeta(1, y+1, n.samp[i-1]-y+1)
n.samp[i] = y + rpois(1, (1-b.samp[i])*lam)
}
hist(n.samp)
hist(b.samp)
log(0.25)/log(0.51)
2.2^2
2.3@
k
2.3^2
6*16^(1/3)
1:100
1-sqrt(0.9)-sqrt(0.1)
1-0.9^2-0.1^
2
1-2*0.1^2
1-0.9^2-0.1^2
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Lab8/lab8.R')
prior2
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Lab8/lab8.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
post2
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
qpost1 = qgamma(c(0.025, 0.975), shape = 50+sum(y), rate = 10+n)
qpost1
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
integrate(post2.func, 0.025, 0.975)
integrate(post2.func, lower = 3, upper = 7)
install.packages("alluvial")
R.Version()
library(devtools)
install.packages("devtools")
library(alluvial)
install_github("mbojan/alluvial")
library(devtools)
R.Version()
library(devtools)
install_github("mbojan/alluvial")
detach("package:devtools", unload=TRUE)
library("devtools", lib.loc="~/R/win-library/3.1")
library(devtools)
library(alluvial)
col1 = c(rep(1,10),rep(2,6),rep(3,15))
c
col1
length(cl1)
length(col1)
col1 = c(rep(1,10),rep(2,6),rep(3,15))
length(col1)
col2.temp = c(rep("Yes",10),rep("No",21))
col2 = sample(col2.temp, 31)
col2
data = NULL
data = cbind(data, col1, col2)
data
View(data)
dataf = as.data.frame(data)
View(dataf)
source('C:/Users/Qiuyu Lin/Desktop/DF2015 Data/DF2015 Data/alluvialtest.R')
View(data)
subset(data, data$col1==1 & data$col2=="Yes")
data$freq = rep(0,31)
for(i in 1:3){
data$freq[data$col1==i & data$col2=="Yes"] = dim(subset(data, data$col1==i & data$col2=="Yes"))[1]
data$freq[data$col1==i & data$col2=="No"] = dim(subset(data, data$col1==i & data$col2=="No"))[1]
}
View(data)
data2d <- aggregate( data$freq ~ data$col1 + data$col2, data=data, sum)
data2d
source('~/.active-rstudio-document')
data2d
data$freq2 = rep(1,31)
data2d <- aggregate( data$freq2 ~ data$col1 + data$col2, data=data, sum)
data2d
alluvial( data2d[,1:2], freq=data2d$freq2, xw=0.0, alpha=0.8,
gap.width=0.1, col= "steelblue", border="white",
layer = data2d$col2 != "Yes" )
alluvial( data2d[,1:2], freq=data2d$freq2, xw=0.0, alpha=0.8)
data2d[,1:2]
alluvial(data2d[,1:2], freq=data2d$freq2)
View(data2d)
View(data)
source('C:/Users/Qiuyu Lin/Desktop/DF2015 Data/DF2015 Data/alluvialtest.R')
data = as.data.frame(data)
source('~/.active-rstudio-document')
data2d$freq3 = rep(1,6)
alluvial(data2d[,1:2], freq=data2d$freq2)
alluvial(data2d[,1:2], freq=data2d$freq3)
View(data2d)
alluvial(data2d[,1:2], freq=data2d[,3])
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('C:/Users/Qiuyu Lin/Desktop/DF2015 Data/DF2015 Data/alluvialtest.R')
View(data)
View(data2d)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(data3d)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(data3d)
data3d <- aggregate(data$freq ~ data$col1 + data$col3 + data$col2, data=data, sum)
data3d$color = rep(NA, 31)
data3d$color[data3d[,2]=="Male" & data3d[,3]=="No"]="red"
data3d$color[data3d[,2]=="Male" & data3d[,3]=="Yes"]="green"
data3d$color[data3d[,2]=="Female" & data3d[,3]=="No"]="orange"
data3d$color[data3d[,2]=="Female" & data3d[,3]=="Yes"]="blue"
alluvial(data3d[,1:3], freq=data3d[,4],alpha=0.8,
gap.width=0.1, col=data3d$color, border="white",
layer = data3d[,3] != "Yes")
View(data3d)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(alluvial)
col1 = c(rep(1,10),rep(2,6),rep(3,15))
col2.temp = c(rep("Yes",15),rep("No",16))
col2 = sample(col2.temp, 31)
col3.temp = c(rep("Male", 19), rep("Female",12))
col3 = sample(col3.temp, 31)
data.temp = NULL
data.temp = cbind(data.temp, col1, col3, col2)
data = as.data.frame(data.temp)
data$freq = rep(1,31)
data3d <- aggregate(data$freq ~ data$col1 + data$col3 + data$col2, data=data, sum)
data3d$color = rep(NA, 31)
data3d$color = rep(NA, 11)
data = as.data.frame(data.temp, header=T)
data$freq = rep(1,31)
data3d <- aggregate(data$freq ~ data$col1 + data$col3 + data$col2, data=data, sum)
data3d$color = rep(NA, 11)
View(data3d)
source('~/.active-rstudio-document')
makes = c("Honda","Toyota","Ford","Mercedes-Benz")
source('C:/Users/Qiuyu Lin/Desktop/DF2015 Data/DF2015 Data/alluvialtest.R')
alluvial(data3d[,1:3], freq=data3d[,4],alpha=0.8,
gap.width=0.1, col=data3d$color, border="white",
layer = data3d[,3] != "No")
alluvial(data3d[,1:3], freq=data3d[,4],alpha=0.8,
gap.width=0.1, col=data3d$color, border="white",
layer = data3d[,3] != "Yes")
View(data3d)
alluvial(data3d[,1:3], freq=data3d[,4],alpha=0.8,
gap.width=0.1, col=data3d$color, border="white")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
alluvial(data3d[,1:3], freq=data3d[,4],alpha=0.6,
gap.width=0.1, col=data3d$color, border="white")
source('~/.active-rstudio-document')
x = c(204, 215, 182, 225, 207, 188, 205, 227, 190, 211, 196, 203)
## Load data ##
x = c(204, 215, 182, 225, 207, 188, 205, 227, 190, 211, 196, 203)
y = c(211, 233, 244, 241, 195, 252, 238, 249, 220, 213)
## Define parameters ##
a = 4     #(shape)
b = 0.02  #(rate)
n = length(x)
m = length(y)
w[1] = sum(log(seq(1,x[1],1)))
sum(log(seq(1,x[1],1)))
seq(1,x[1],1)
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Assignment 10/cell.R')
gamma(4)
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Assignment 10/cell.R')
exp(H1.loglik)
exp(H0.loglik)
H1.post = exp(H1.loglik)/(exp(H1.loglik)+exp(H0.loglik))
H0.post = exp(H0.loglik)/(exp(H1.loglik)+exp(H0.loglik))
B10 = exp(H1.loglik - H0.loglik)
setwd("C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Assignment 10")
data = read.table("http://www.stat.washington.edu/people/pdhoff/Book/Data/hwdata/azdiabetes.dat", sep=',', header=T)
View(data)
data[1,1]
data = read.table("http://www.stat.washington.edu/people/pdhoff/Book/Data/hwdata/azdiabetes.dat", sep='', header=T)
View(data)
data[1,1]
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Assignment 10/cell.R')
sum(w)
seq(1,x[1])
sum(v)
source('~/.active-rstudio-document')
f
g
h
B10
1/(1+B10*H1.prior/H0.prior)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
data = data[,c(1:7)]
View(data)
y = data[,2]
X = data[,-2]
source('~/.active-rstudio-document')
View(X)
View(X)
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Assignment 10/diabetes.R')
source('~/.active-rstudio-document')
X
y
y = data[,2]
X = as.matrix(data[,-2])
X
source('~/.active-rstudio-document')
diag(1,nrow=n)
n
diag(1,nrow=4)
View(E)
?chol
View(E)
View(beta)
View(Eb)
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Assignment 10/diabetes.R')
View(Eb)
View(X)
quantile(beta, 0.025, 0.975)
quantile(beta, c(0.025, 0.975))
View(beta)
paste("beta",1,sep="")
## confidence interval ##
for(i in 1:p){
paste("beta",i,sep="") = quantile(beta[,i], c(0.025, 0.975))
}
p
## confidence interval ##
beta.npreg.ci = quantile(beta[,1], c(0.025, 0.975))
beta.bp.ci = quantile(beta[,2], c(0.025, 0.975))
beta.skin.ci = quantile(beta[,3], c(0.025, 0.975))
beta.bmi.ci = quantile(beta[,4], c(0.025, 0.975))
beta.ped.ci = quantile(beta[,5], c(0.025, 0.975))
beta.age.ci = quantile(beta[,6], c(0.025, 0.975))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(Z)
mean(Z[,c(1:6)])
Z.mean = rep(0,p)
for(i in 1:p){
Z.mean[i] = mean(Z[,i])
}
Z.mean
View(lpy.c)
quantile(beta[,1], c(0.025, 0.975))
beta.npreg.ci
z
X.z = X
for(i in 1:p){
if(z[i]==0){
X.z[,i]=0
}
}
View(X.z)
Hg.new = (g/(g+1)) * X.z%*%solve(t(X.z)%*%X.z)%*%t(X.z)
SSRg.new = t(y)%*%( diag(1, nrow=n) - Hg.new) %*%y
s2.new = 1/rgamma(1, (nu0+n)/2, (nu0*s20+SSRg.new)/2)
Vb.new = g*solve(t(X.z)%*%X.z)/(g+1)
Eb.new = Vb.new%*%t(X.z)%*%y
E.new = matrix(rnorm(1*p, 0, sqrt(s2.new)), 1, p)
beta.new = t( t(E.new%*%chol(Vb.new)) + c(Eb.new))
X.z
t(X.z)%*%X.z
solve(t(X.z)%*%X.z)
## find new beta ##
X.z = NULL
for(i in 1:p){
if(z[i]!=0){
X.z = cbind(X.z, X[,i])
}
}
X.z
Hg.new = (g/(g+1)) * X.z%*%solve(t(X.z)%*%X.z)%*%t(X.z)
SSRg.new = t(y)%*%( diag(1, nrow=n) - Hg.new) %*%y
s2.new = 1/rgamma(1, (nu0+n)/2, (nu0*s20+SSRg.new)/2)
Vb.new = g*solve(t(X.z)%*%X.z)/(g+1)
Eb.new = Vb.new%*%t(X.z)%*%y
E.new = matrix(rnorm(1*p, 0, sqrt(s2.new)), 1, p)
beta.new = t( t(E.new%*%chol(Vb.new)) + c(Eb.new))
E.new = matrix(rnorm(1*ncol(X.z), 0, sqrt(s2.new)), 1, ncol(X.z))
beta.new = t( t(E.new%*%chol(Vb.new)) + c(Eb.new))
beta.new
which(z!=0)
BETA = matrix(0, n, p)
BETA
BETA = matrix(0, S, p)
which(z!=0)
sum(z)
which(z!=0)[1]
z
beta.new
## find new beta ##
BETA = matrix(0, S, p)
for(s in 1:S){
z = Z[s,]
X.z = NULL
for(i in 1:p){
if(z[i]!=0){
X.z = cbind(X.z, X[,i])
}
}
Hg.new = (g/(g+1)) * X.z%*%solve(t(X.z)%*%X.z)%*%t(X.z)
SSRg.new = t(y)%*%( diag(1, nrow=n) - Hg.new) %*%y
s2.new = 1/rgamma(1, (nu0+n)/2, (nu0*s20+SSRg.new)/2)
Vb.new = g*solve(t(X.z)%*%X.z)/(g+1)
Eb.new = Vb.new%*%t(X.z)%*%y
E.new = matrix(rnorm(1*ncol(X.z), 0, sqrt(s2.new)), 1, ncol(X.z))
beta.new = t( t(E.new%*%chol(Vb.new)) + c(Eb.new))
for(j in 1:sum(z)){
BETA[s, which(z!=0)[j] ] = beta.new[j]
}
}
View(BETA)
View(Z)
sum(Z[,1])
## new posterior(BETA) confidence interval ##
BETA.npreg.ci = quantile(BETA[,1], c(0.025, 0.975))
BETA.bp.ci = quantile(BETA[,2], c(0.025, 0.975))
BETA.skin.ci = quantile(BETA[,3], c(0.025, 0.975))
BETA.bmi.ci = quantile(BETA[,4], c(0.025, 0.975))
BETA.ped.ci = quantile(BETA[,5], c(0.025, 0.975))
BETA.age.ci = quantile(BETA[,6], c(0.025, 0.975))
beta.npreg.ci
BETA.npreg.ci
beta.npreg.ci = quantile(beta[,1], c(0.025, 0.975))
beta.bp.ci = quantile(beta[,2], c(0.025, 0.975))
beta.skin.ci = quantile(beta[,3], c(0.025, 0.975))
beta.bmi.ci = quantile(beta[,4], c(0.025, 0.975))
beta.ped.ci = quantile(beta[,5], c(0.025, 0.975))
beta.age.ci = quantile(beta[,6], c(0.025, 0.975))
beta.npreg.ci
beta.bp.ci
beta.skin.ci
beta.bmi.ci
beta.ped.ci
beta.age.ci
BETA.npreg.ci
BETA.bp.ci
BETA.skin.ci
BETA.bmi.ci
BETA.ped.ci
BETA.age.ci
Z.mean
