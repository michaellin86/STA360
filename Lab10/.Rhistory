for(i in 2:N){
b.samp[i] = rbeta(1, y+1, n.samp[i-1]-y+1)
n.samp[i] = y + rpois(1, (1-b.samp[i])*lam)
}
hist(n.samp)
hist(b.samp)
log(0.25)/log(0.51)
2.2^2
2.3@
k
2.3^2
6*16^(1/3)
1:100
1-sqrt(0.9)-sqrt(0.1)
1-0.9^2-0.1^
2
1-2*0.1^2
1-0.9^2-0.1^2
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Lab8/lab8.R')
prior2
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Lab8/lab8.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
post2
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
qpost1 = qgamma(c(0.025, 0.975), shape = 50+sum(y), rate = 10+n)
qpost1
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
integrate(post2.func, 0.025, 0.975)
integrate(post2.func, lower = 3, upper = 7)
install.packages("alluvial")
R.Version()
library(devtools)
install.packages("devtools")
library(alluvial)
install_github("mbojan/alluvial")
library(devtools)
R.Version()
library(devtools)
install_github("mbojan/alluvial")
detach("package:devtools", unload=TRUE)
library("devtools", lib.loc="~/R/win-library/3.1")
library(devtools)
library(alluvial)
col1 = c(rep(1,10),rep(2,6),rep(3,15))
c
col1
length(cl1)
length(col1)
col1 = c(rep(1,10),rep(2,6),rep(3,15))
length(col1)
col2.temp = c(rep("Yes",10),rep("No",21))
col2 = sample(col2.temp, 31)
col2
data = NULL
data = cbind(data, col1, col2)
data
View(data)
dataf = as.data.frame(data)
View(dataf)
source('C:/Users/Qiuyu Lin/Desktop/DF2015 Data/DF2015 Data/alluvialtest.R')
View(data)
subset(data, data$col1==1 & data$col2=="Yes")
data$freq = rep(0,31)
for(i in 1:3){
data$freq[data$col1==i & data$col2=="Yes"] = dim(subset(data, data$col1==i & data$col2=="Yes"))[1]
data$freq[data$col1==i & data$col2=="No"] = dim(subset(data, data$col1==i & data$col2=="No"))[1]
}
View(data)
data2d <- aggregate( data$freq ~ data$col1 + data$col2, data=data, sum)
data2d
source('~/.active-rstudio-document')
data2d
data$freq2 = rep(1,31)
data2d <- aggregate( data$freq2 ~ data$col1 + data$col2, data=data, sum)
data2d
alluvial( data2d[,1:2], freq=data2d$freq2, xw=0.0, alpha=0.8,
gap.width=0.1, col= "steelblue", border="white",
layer = data2d$col2 != "Yes" )
alluvial( data2d[,1:2], freq=data2d$freq2, xw=0.0, alpha=0.8)
data2d[,1:2]
alluvial(data2d[,1:2], freq=data2d$freq2)
View(data2d)
View(data)
source('C:/Users/Qiuyu Lin/Desktop/DF2015 Data/DF2015 Data/alluvialtest.R')
data = as.data.frame(data)
source('~/.active-rstudio-document')
data2d$freq3 = rep(1,6)
alluvial(data2d[,1:2], freq=data2d$freq2)
alluvial(data2d[,1:2], freq=data2d$freq3)
View(data2d)
alluvial(data2d[,1:2], freq=data2d[,3])
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('C:/Users/Qiuyu Lin/Desktop/DF2015 Data/DF2015 Data/alluvialtest.R')
View(data)
View(data2d)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(data3d)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(data3d)
data3d <- aggregate(data$freq ~ data$col1 + data$col3 + data$col2, data=data, sum)
data3d$color = rep(NA, 31)
data3d$color[data3d[,2]=="Male" & data3d[,3]=="No"]="red"
data3d$color[data3d[,2]=="Male" & data3d[,3]=="Yes"]="green"
data3d$color[data3d[,2]=="Female" & data3d[,3]=="No"]="orange"
data3d$color[data3d[,2]=="Female" & data3d[,3]=="Yes"]="blue"
alluvial(data3d[,1:3], freq=data3d[,4],alpha=0.8,
gap.width=0.1, col=data3d$color, border="white",
layer = data3d[,3] != "Yes")
View(data3d)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(alluvial)
col1 = c(rep(1,10),rep(2,6),rep(3,15))
col2.temp = c(rep("Yes",15),rep("No",16))
col2 = sample(col2.temp, 31)
col3.temp = c(rep("Male", 19), rep("Female",12))
col3 = sample(col3.temp, 31)
data.temp = NULL
data.temp = cbind(data.temp, col1, col3, col2)
data = as.data.frame(data.temp)
data$freq = rep(1,31)
data3d <- aggregate(data$freq ~ data$col1 + data$col3 + data$col2, data=data, sum)
data3d$color = rep(NA, 31)
data3d$color = rep(NA, 11)
data = as.data.frame(data.temp, header=T)
data$freq = rep(1,31)
data3d <- aggregate(data$freq ~ data$col1 + data$col3 + data$col2, data=data, sum)
data3d$color = rep(NA, 11)
View(data3d)
source('~/.active-rstudio-document')
makes = c("Honda","Toyota","Ford","Mercedes-Benz")
source('C:/Users/Qiuyu Lin/Desktop/DF2015 Data/DF2015 Data/alluvialtest.R')
alluvial(data3d[,1:3], freq=data3d[,4],alpha=0.8,
gap.width=0.1, col=data3d$color, border="white",
layer = data3d[,3] != "No")
alluvial(data3d[,1:3], freq=data3d[,4],alpha=0.8,
gap.width=0.1, col=data3d$color, border="white",
layer = data3d[,3] != "Yes")
View(data3d)
alluvial(data3d[,1:3], freq=data3d[,4],alpha=0.8,
gap.width=0.1, col=data3d$color, border="white")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
alluvial(data3d[,1:3], freq=data3d[,4],alpha=0.6,
gap.width=0.1, col=data3d$color, border="white")
source('~/.active-rstudio-document')
x = c(204, 215, 182, 225, 207, 188, 205, 227, 190, 211, 196, 203)
## Load data ##
x = c(204, 215, 182, 225, 207, 188, 205, 227, 190, 211, 196, 203)
y = c(211, 233, 244, 241, 195, 252, 238, 249, 220, 213)
## Define parameters ##
a = 4     #(shape)
b = 0.02  #(rate)
n = length(x)
m = length(y)
w[1] = sum(log(seq(1,x[1],1)))
sum(log(seq(1,x[1],1)))
seq(1,x[1],1)
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Assignment 10/cell.R')
gamma(4)
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Assignment 10/cell.R')
exp(H1.loglik)
exp(H0.loglik)
H1.post = exp(H1.loglik)/(exp(H1.loglik)+exp(H0.loglik))
H0.post = exp(H0.loglik)/(exp(H1.loglik)+exp(H0.loglik))
B10 = exp(H1.loglik - H0.loglik)
library(MCMCpack)
set.seed(1)
## load data ##
data = read.table("http://www.stat.washington.edu/people/pdhoff/Book/Data/hwdata/azdiabetes.dat", sep='', header=T)
data = data[,c(1:7)]
data$intercept = rep(1,nrow(data))
View(data)
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Assignment 10/diabetes.R')
BETA.npreg.ci
BETA.int.ci = quantile(BETA[,7], c(0.025, 0.975))
BETA.int.ci
BETA.bp.ci
BETA.skin.c
BETA.skin.ci
BETA.bmi.ci
BETA.ped.ci
BETA.age.ci
BETA.intercept.ci
BETA.int.ci
beta.npreg.ci
beta.bp.ci
beta.skin.ci
beta.bmi.ci
beta.ped.ci
beta.age.ci
beta.int.ci
beta.int.ci = quantile(beta[,7], c(0.025, 0.975))
beta.int.ci = quantile(beta[,7], c(0.025, 0.975))
beta.int.ci
z.mean
Z.ean
Z.mean
Z
beta
Z
BETA1 = beta*Z
View(BETA1)
quantile(BETA1[,1], c(0.025, 0.975))
BETA.npreg.ci
beta.npreg.ci
quantile(BETA1[,1], c(0.025, 0.975))
quantile(BETA1[,2], c(0.025, 0.975))
quantile(BETA1[,3], c(0.025, 0.975))
quantile(BETA1[,4], c(0.025, 0.975))
quantile(BETA1[,5], c(0.025, 0.975))
quantile(BETA1[,6], c(0.025, 0.975))
quantile(BETA1[,7], c(0.025, 0.975))
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Lab10/lab10.R')
setwd("C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Lab10")
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Lab10/lab10.R')
MU1.mean
MU2.mean
SIG1.mean
SIG2.mean
MU1.ci
MU2.ci
SIG1.ci
SIG2.ci
mean(MU1>MU2)
mean(SIG1>SIG2)
setwd("C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Lab11")
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Lab11/lab11.R')
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Lab11/lab11.R')
clear(Y1)
clearNames(Y)
mu1.temp = mean(Y1)
sig1.temp = var(Y1)
mu2.temp = mean(Y2)
sig2.temp = var(Y2)
View(data)
View(X)
zero.mat = rep(0, nrow = nrow(Y), ncol = 3)
Y = cbind(Y, zero.mat)
View(Y)
zero.mat = matrix(0, nrow = nrow(Y), ncol = 3)
Y = cbind(Y, zero.mat)
View(Y)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
data = read.table("data.txt", header = T)
library(MCMCpack)
data$weekend = rep(0,nrow(data))
data$weekend[data$day=='Saturday' | data$day=='Sunday'] = 1
X = data[,-2]
Y1 = subset(X, weekend==0)
row.names(Y1) = NULL
Y1 = Y1[,1]
Y2 = subset(X, weekend==1)
row.names(Y2) = NULL
Y2 = Y2[,1]
Y = X[,1]
zero.mat = matrix(0, nrow = nrow(Y), ncol = 3)
nrow(Y)
zero.mat = matrix(0, nrow = length(Y), ncol = 3)
Y = cbind(Y, zero.mat)
View(Y)
rownames(Y) = c("Y","w","Y*w","Y*(1-w)")
colnames(Y) = c("Y","w","Y*w","Y*(1-w)")
View(Y)
Y$Y
Y
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
zero.mat = matrix(0, nrow = length(Y), ncol = 3)
Y.dat = cbind(Y, zero.mat)
View(Y.dat)
colnames(Y) = c("Y","w","Y*w","Y*(1-w)")
colnames(Y.dat) = c("Y","w","Y*w","Y*(1-w)")
rm(Y)
attach(Y.dat)
source('~/.active-rstudio-document')
colnames(Y.dat) = c("Y","w","Y*w","Y*(1-w)")
View(Y.dat)
## load data ##
data = read.table("data.txt", header = T)
library(MCMCpack)
data$weekend = rep(0,nrow(data))
data$weekend[data$day=='Saturday' | data$day=='Sunday'] = 1
X = data[,-2]
Y1 = subset(X, weekend==0)
row.names(Y1) = NULL
Y1 = Y1[,1]
Y2 = subset(X, weekend==1)
row.names(Y2) = NULL
Y2 = Y2[,1]
Y = X[,1]
zero.mat = matrix(0, nrow = length(Y), ncol = 4)
Y.dat = cbind(Y, zero.mat)
colnames(Y.dat) = c("Y","w","Y*w","Y*(1-w)", "pw=1")
#Y[,1] =Y | Y[,2] = w | Y[,3] = Yw | Y[,4] = Y(1-w) | Y[,5] = p(w=1)#
## load data ##
data = read.table("data.txt", header = T)
library(MCMCpack)
data$weekend = rep(0,nrow(data))
data$weekend[data$day=='Saturday' | data$day=='Sunday'] = 1
X = data[,-2]
Y1 = subset(X, weekend==0)
row.names(Y1) = NULL
Y1 = Y1[,1]
Y2 = subset(X, weekend==1)
row.names(Y2) = NULL
Y2 = Y2[,1]
Y = X[,1]
zero.mat = matrix(0, nrow = length(Y), ncol = 4)
Y.dat = cbind(Y, zero.mat)
colnames(Y.dat) = c("Y","w","Y*w","Y*(1-w)", "pw=1")
#Y[,1] =Y | Y[,2] = w | Y[,3] = Yw | Y[,4] = Y(1-w) | Y[,5] = p(w=1)#
source('~/.active-rstudio-document')
## load data ##
data = read.table("data.txt", header = T)
library(MCMCpack)
data$weekend = rep(0,nrow(data))
data$weekend[data$day=='Saturday' | data$day=='Sunday'] = 1
X = data[,-2]
Y1 = subset(X, weekend==0)
row.names(Y1) = NULL
Y1 = Y1[,1]
Y2 = subset(X, weekend==1)
row.names(Y2) = NULL
Y2 = Y2[,1]
Y = X[,1]
zero.mat = matrix(0, nrow = length(Y), ncol = 4)
Y.dat = cbind(Y, zero.mat)
colnames(Y.dat) = c("Y","w","Y*w","Y*(1-w)", "pw=1")
#Y[,1] =Y | Y[,2] = w | Y[,3] = Yw | Y[,4] = Y(1-w) | Y[,5] = p(w=1)#
## set prior parameters ##
p.a = 5; p.b = 2
m1 = m2 = 0
s21 = s22 = 1
a1 = a2 = 1
b1 = b2 = 1
n = nrow(Y.dat)
N = 5
## set seed priors ##
mu1.temp = mean(Y1)
sig1.temp = var(Y1)
mu2.temp = mean(Y2)
sig2.temp = var(Y2)
## sample priors ##
# sample p #
wvec = Y.dat[,2]
wvec.temp = rep(0, n) #new w's
pw1 = rep(0, n) #p(w=1)
pyw = rep(0, n) #p(y|w)
p.temp = rbeta(1, p.a + sum(wvec), n + p.a - sum(wvec))
for(i in 1:n){
pyw[i] = rlnorm(1, meanlog = wvec[i]*mu1.temp + (1-wvec)*mu2.temp,
sdlog = sqrt(wvec[i]*sig1.temp + (1-wvec[i])*sig2.temp))
pw1[i] = pyw[i]*p.temp/(pyw[i]*p.temp + pyw[i]*(1-p.temp))
wvec.temp[i] = rbinom(1, 1, pw1[i])
}
## load data ##
data = read.table("data.txt", header = T)
library(MCMCpack)
data$weekend = rep(0,nrow(data))
data$weekend[data$day=='Saturday' | data$day=='Sunday'] = 1
X = data[,-2]
Y1 = subset(X, weekend==0)
row.names(Y1) = NULL
Y1 = Y1[,1]
Y2 = subset(X, weekend==1)
row.names(Y2) = NULL
Y2 = Y2[,1]
Y = X[,1]
zero.mat = matrix(0, nrow = length(Y), ncol = 4)
Y.dat = cbind(Y, zero.mat)
colnames(Y.dat) = c("Y","w","Y*w","Y*(1-w)", "pw=1")
#Y[,1] =Y | Y[,2] = w | Y[,3] = Yw | Y[,4] = Y(1-w) | Y[,5] = p(w=1)#
## set prior parameters ##
p.a = 5; p.b = 2
m1 = m2 = 0
s21 = s22 = 1
a1 = a2 = 1
b1 = b2 = 1
n = nrow(Y.dat)
N = 5
## set seed priors ##
mu1.temp = mean(Y1)
sig1.temp = var(Y1)
mu2.temp = mean(Y2)
sig2.temp = var(Y2)
## sample priors ##
# sample p #
wvec = Y.dat[,2]
wvec.temp = rep(0, n) #new w's
pw1 = rep(0, n) #p(w=1)
pyw = rep(0, n) #p(y|w)
p.temp = rbeta(1, p.a + sum(wvec), n + p.a - sum(wvec))
for(i in 1:n){
pyw[i] = rlnorm(1, meanlog = wvec[i]*mu1.temp + (1-wvec)*mu2.temp,
sdlog = sqrt(wvec[i]*sig1.temp + (1-wvec[i])*sig2.temp))
pw1[i] = pyw[i]*p.temp/(pyw[i]*p.temp + pyw[i]*(1-p.temp))
wvec.temp[i] = rbinom(1, 1, pw1[i])
}
View(Y.dat)
View(Y.dat)
Y.dat[,5] = pw1
Y.dat[,2] = wvec.temp
View(Y.dat)
Y.dat[,3] = Y.dat[,1]*Y.dat[,2]
Y.dat[,4] = Y.dat[,1]*(1-Y.dat[,2])
View(Y.dat)
sum(Y.dat[,2]==1)
sum(Y.dat[,2]==0)
Y.dat[,4]!=0
log(Y.dat[which(Y.dat[,4]!=0)])
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Lab11/lab11.R')
rnorm(1, mean = (s21*sum(log(Y.dat[which(Y.dat[,3]!=0)])))+m1*sig1.temp-n1*mu2.temp*s21)/(n1*s21+sig1.temp),
sd = sqrt(sig1.temp*s21/(n1*s21+sig1.temp)) )
del.temp = rnorm(1, mean = ((s21*sum(log(Y.dat[which(Y.dat[,3]!=0)])))+m1*sig1.temp-n1*mu2.temp*s21)/(n1*s21+sig1.temp), sd = sqrt(sig1.temp*s21/(n1*s21+sig1.temp)) )
source('~/.active-rstudio-document')
View(Y.dat)
source('~/.active-rstudio-document')
del.temp = abs(rnorm(1, mean = ((s21*sum(log(Y.dat[,3][which(Y.dat[,3]!=0)])))+m1*sig1.temp-n1*mu2.temp*s21)/(n1*s21+sig1.temp),
sd = sqrt(sig1.temp*s21/(n1*s21+sig1.temp)) ))
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Lab11/lab11.R')
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Lab11/lab11.R')
View(Y.dat)
pw1
source('~/.active-rstudio-document')
View(Y.dat)
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Lab11/lab11.R')
setwd("C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Lab10")
source('C:/Users/Qiuyu Lin/SkyDrive/Personal/College/Duke/2014-2015 Spring/STA 360-Bayesian and Modern Statistics/Lab10/lab10.R')
we = rlnorm(10000, meanlog = MU2[10000], sdlog = sqrt(SIG2[10000]))
mean(wk>we)
wk = we = rep(0, 10000)
for(i in 1:10000){
wk[i] = rlnorm(1, meanlog = MU1[i], sdlog = sqrt(SIG1[i]))
we[i] = rlnorm(1, meanlog = MU2[i], sdlog = sqrt(SIG2[i]))
}
mean(wk>we)
wk = we = rep(0, 10000)
for(i in 1:10000){
wk[i] = rlnorm(1, meanlog = MU1[i], sdlog = sqrt(SIG1[i]))
we[i] = rlnorm(1, meanlog = MU2[i], sdlog = sqrt(SIG2[i]))
}
mean(wk>we)
wk = we = rep(0, 10000)
for(i in 1:10000){
wk[i] = rlnorm(1, meanlog = MU1[i], sdlog = sqrt(SIG1[i]))
we[i] = rlnorm(1, meanlog = MU2[i], sdlog = sqrt(SIG2[i]))
}
mean(wk>we)
wk = we = rep(0, 10000)
for(i in 1:10000){
wk[i] = rlnorm(1, meanlog = MU1[i], sdlog = sqrt(SIG1[i]))
we[i] = rlnorm(1, meanlog = MU2[i], sdlog = sqrt(SIG2[i]))
}
mean(wk>we)
wk = rlnorm(10000, meanlog = MU1[10000], sdlog = sqrt(SIG1[10000]))
we = rlnorm(10000, meanlog = MU2[10000], sdlog = sqrt(SIG2[10000]))
mean(wk>we)
wk = rlnorm(10000, meanlog = MU1[10000], sdlog = sqrt(SIG1[10000]))
we = rlnorm(10000, meanlog = MU2[10000], sdlog = sqrt(SIG2[10000]))
mean(wk>we)
wk = rlnorm(10000, meanlog = MU1[10000], sdlog = sqrt(SIG1[10000]))
we = rlnorm(10000, meanlog = MU2[10000], sdlog = sqrt(SIG2[10000]))
mean(wk>we)
wk = rlnorm(10000, meanlog = MU1[10000], sdlog = sqrt(SIG1[10000]))
we = rlnorm(10000, meanlog = MU2[10000], sdlog = sqrt(SIG2[10000]))
mean(wk>we)
wk = we = rep(0, 10000)
for(i in 1:10000){
wk[i] = rlnorm(1, meanlog = MU1[i], sdlog = sqrt(SIG1[i]))
we[i] = rlnorm(1, meanlog = MU2[i], sdlog = sqrt(SIG2[i]))
}
mean(wk>we)
